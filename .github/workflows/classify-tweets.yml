name: Daily Tweet Classifier

on:
  schedule:
    # Run every day at 10:30 AM EST (15:30 UTC)
    # EST is UTC-5, so 10:30 AM EST = 15:30 UTC
    - cron: '30 15 * * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write

jobs:
  classify-tweets:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Increased timeout for 25 accounts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          chromedriver --version || echo "Chromedriver installation failed"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager fake-useragent

      - name: Create directories
        run: |
          mkdir -p data
          mkdir -p debug_screenshots
          chmod -R 755 debug_screenshots

      - name: Generate timestamp
        id: timestamp
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "Generated timestamp: $TIMESTAMP"

      - name: Run Tweet Classifier
        env:
          HEADLESS_MODE: "True"  # Force headless mode in CI
          DEBUG_MODE: "True"     # Enable debugging in CI
          OUTPUT_FILE: "data/tweets_with_bias_${{ env.TIMESTAMP }}.json"
        run: |
          echo "Output file: $OUTPUT_FILE"
          
          # Run script with timeout
          timeout 15m python main.py
          
          # Check if output file was created
          if [ -f "$OUTPUT_FILE" ]; then
            echo "Output file created: $OUTPUT_FILE"
            ls -la data/
          else
            echo "Error: No output file created!"
            exit 1
          fi
          
          # List debug screenshots if any
          ls -la debug_screenshots/ || echo "No debug screenshots"

      - name: Commit and push JSON files
        uses: EndBug/add-and-commit@v9
        with:
          add: 'data/*.json'
          message: 'Auto-update: Daily tweet scraping ${{ env.TIMESTAMP }}'
          default_author: github_actions

      - name: Upload debug screenshots
        if: ${{ always() }}  # Upload even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: debug-screenshots
          path: debug_screenshots/
